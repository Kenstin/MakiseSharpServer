// <auto-generated />
using System;
using MakiseSharpServer.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MakiseSharpServer.API.Migrations
{
    [DbContext(typeof(MakiseDbContext))]
    [Migration("20190209152021_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview.18572.1");

            modelBuilder.Entity("MakiseSharpServer.Domain.Entities.UserAggregate.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Token")
                        .IsRequired();

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("MakiseSharpServer.Domain.Entities.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiscordAccessToken")
                        .IsRequired();

                    b.Property<ulong>("DiscordId");

                    b.Property<string>("DiscordRefreshToken")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DiscordId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MakiseSharpServer.Domain.Entities.UserAggregate.RefreshToken", b =>
                {
                    b.HasOne("MakiseSharpServer.Domain.Entities.UserAggregate.User")
                        .WithMany("AppRefreshTokens")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
